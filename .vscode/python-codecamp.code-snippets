{
    // Place your python-bootcamp workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.

    "new_file": {
        "scope": "python",
        "prefix": "new_file",
        "body": [
            "#!/usr/bin/env python3",
            "",
            "$BLOCK_COMMENT_START",
            "${1:Title}",
            "",
            "${2:Description}",
            "$BLOCK_COMMENT_END",
            "",
            "def main():",
            "    $BLOCK_COMMENT_START",
            "    Main function",
            "",
            "    Executes the main flow of the script",
            "    $BLOCK_COMMENT_END",
            "",
            "if __name__ == '__main__':",
            "    main()",
            ""
        ]
    },
    "comment_block": {
        "scope": "python",
        "prefix": "comment_block",
        "body": [
            "$BLOCK_COMMENT_START",
            "${1:Title}",
            "",
            "${2:Description}",
            "$BLOCK_COMMENT_END"
        ]
    },
    "ask_input": {
        "scope": "python",
        "prefix": "ask_input",
        "body": [
            "def ask_input():",
            "    $BLOCK_COMMENT_START",
            "    Ask input",
            "",
            "    Prompt user for input.",
            "    Continue asking until valid input is provided.",
            "    $BLOCK_COMMENT_END",
            "",
            "    # continue asking until valid input is provided",
            "    while True:",
            "        try:",
            "            # ask input",
            "            value = input('Input: ')",
            "        except ValueError:",
            "            # invalid: ask again",
            "            print('Invalid, try again.')",
            "        else:",
            "            # valid: exit loop",
            "            break",
            "",
            "    # return input",
            "    return value"
        ]
    }
}
